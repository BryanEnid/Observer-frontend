# # This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# # For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# name: React CI/CD

# #
# on:
#   push:
#     branches: [development]

# env:
#   BASE_RELEASE_VERSION: "1.0"
#   CONTAINER_TAG: "platform/tango-associate-ui"
#   CONTAINER_REGISTRY: "nexus.employbridge.services:8082"

# jobs:
#   dev-deploy:
#     runs-on: self-hosted

#     strategy:
#       matrix:
#         node-version: [12.x]

#     steps:
#       - uses: actions/checkout@v2
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}

#       - run: npm install

#       - name: Modify configuration file - deployment yaml
#         uses: cschleiden/replace-tokens@v1
#         with:
#           files: '["./.env.production"]'

#       # FTD - 14MAR21 - Note CI is now nil!   Done to prevent warnings from being treated as errors
#       - run: CI='' npm run build --if-present
#       - run: npm test

#       - name: Import Secrets from Vault
#         uses: hashicorp/vault-action@v2.1.0
#         with:
#           url: https://vault.theatlastango.tools
#           method: approle
#           roleId: ${{ secrets.ATLAS_VAULT_ROLE_ID }}
#           secretId: ${{ secrets.ATLAS_VAULT_SECRET_ID }}
#           secrets: |
#             /atlas/aws/atlas-apollo-dev/terraform-user aws_access_key_id | AWS_ACCESS_KEY_ID ;
#             /atlas/aws/atlas-apollo-dev/terraform-user aws_secret_access_key | AWS_SECRET_ACCESS_KEY

#       - name: Deploy to S3 DEV
#         uses: jakejarvis/s3-sync-action@master
#         with:
#           args: --acl public-read --delete
#         env:
#           AWS_S3_BUCKET: "apollo-jupiter-tango-dev.associate.theatlastango.com"
#           AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
#           AWS_REGION: "us-west-2"
#           SOURCE_DIR: "build"

#       # - name: Invalidate AWS Cloudfront Cache
#       #   uses: chetan/invalidate-cloudfront-action@master
#       #   env:
#       #     DISTRIBUTION: "E33WK3QY3C19KX"
#       #     PATHS: "/index.html"
#       #     AWS_REGION: "us-east-1"
#       #     AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
#       #     AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
